% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/book_by_id.R
\name{get_book_by_id}
\alias{get_book_by_id}
\title{Retrieve a Book by ID}
\usage{
get_book_by_id(book_id)
}
\arguments{
\item{book_id}{Integer. The unique ID of the book.
Must be a single, non-missing, positive integer value.}
}
\value{
A \code{data.frame} containing one row with \code{book_id}, \code{title}, \code{author},
\code{skill_id} if the book is found. Returns an empty (0-row) \code{data.frame}
if the \code{book_id} is not found. Stops with an error if the query fails
or \code{book_id} is invalid.
}
\description{
Fetches details for a specific book from \code{adem.book_recommendations} based on its book ID.
\subsection{NOTE: Verify 'adem.book_recommendations' is the correct table name.}{
}

\subsection{If it should be 'adem.books', update the code below.}{
}
}
\examples{
\dontrun{
# Assumes connect_db is defined and database credentials are set

# Get book 101
book_101 <- get_book_by_id(101)
if (nrow(book_101) > 0) {
  print(book_101)
  print(book_101$title) # Access columns directly
} else {
  print("Book 101 not found.")
}

# Non-existent book
fake_book <- get_book_by_id(99999)
print(paste("Rows found for book 99999:", nrow(fake_book))) # Should be 0

# Invalid input
try(get_book_by_id("abc"))
try(get_book_by_id(NA))
try(get_book_by_id(c(1, 2)))
try(get_book_by_id(10.5))
try(get_book_by_id(0)) # Check for positive
}

}
\seealso{
\code{\link[=connect_db]{connect_db()}} # Add get_books() if it exists
}
