% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/learning_track_by_id.R
\name{get_learning_track_by_id}
\alias{get_learning_track_by_id}
\title{Retrieve Learning Track Details and Associated Skills by ID}
\usage{
get_learning_track_by_id(track_id)
}
\arguments{
\item{track_id}{Integer. The unique ID of the learning track. Must be a single,
non-missing, positive integer value.}
}
\value{
A list containing two elements:
\describe{
\item{\code{track}}{A 1-row \code{data.frame} with track details (\code{track_id}, \code{title}, \code{description}, \code{url}) from \code{adem.learning_tracks}.}
\item{\code{skills}}{A \code{data.frame} with details (\code{skill_id}, \code{skill_label}) of skills associated with the track, joined from \code{adem.skills} via \code{adem.track_skills}. Can be 0 rows if no skills are associated.}
}
Returns \code{NULL} if no learning track with the given \code{track_id} is found.
Stops with an error on database issues or invalid input.
}
\description{
This function retrieves detailed information about a learning track and its associated skills
from the database using the track's unique identifier.
}
\examples{
\dontrun{
# Assumes connect_db is defined and database credentials are set

# Get information for track with ID 71
track_details <- get_learning_track_by_id(71)
if (!is.null(track_details)) {
  print("Track Info:")
  print(track_details$track)
  print("Associated Skills:")
  print(track_details$skills)
} else {
  print("Track ID 71 not found.")
}

# Non-existent track
non_existent <- get_learning_track_by_id(9999)
print(is.null(non_existent)) # Should be TRUE

# Invalid input
try(get_learning_track_by_id("abc"))
try(get_learning_track_by_id(0)) # Added check for positive ID
try(get_learning_track_by_id(NA))
try(get_learning_track_by_id(c(1, 2)))
}
}
\seealso{
\code{\link[=connect_db]{connect_db()}}
}
